<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mengka.springboot.dao.persistence.GogsRepositoryDOMapper">
  <resultMap id="BaseResultMap" type="com.mengka.springboot.dao.domain.GogsRepositoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="lower_name" jdbcType="VARCHAR" property="lowerName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="website" jdbcType="VARCHAR" property="website" />
    <result column="default_branch" jdbcType="VARCHAR" property="defaultBranch" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="use_custom_avatar" jdbcType="BIT" property="useCustomAvatar" />
    <result column="num_watches" jdbcType="INTEGER" property="numWatches" />
    <result column="num_stars" jdbcType="INTEGER" property="numStars" />
    <result column="num_forks" jdbcType="INTEGER" property="numForks" />
    <result column="num_issues" jdbcType="INTEGER" property="numIssues" />
    <result column="num_closed_issues" jdbcType="INTEGER" property="numClosedIssues" />
    <result column="num_pulls" jdbcType="INTEGER" property="numPulls" />
    <result column="num_closed_pulls" jdbcType="INTEGER" property="numClosedPulls" />
    <result column="num_milestones" jdbcType="INTEGER" property="numMilestones" />
    <result column="num_closed_milestones" jdbcType="INTEGER" property="numClosedMilestones" />
    <result column="is_private" jdbcType="BIT" property="isPrivate" />
    <result column="is_bare" jdbcType="BIT" property="isBare" />
    <result column="is_mirror" jdbcType="BIT" property="isMirror" />
    <result column="enable_wiki" jdbcType="BIT" property="enableWiki" />
    <result column="allow_public_wiki" jdbcType="BIT" property="allowPublicWiki" />
    <result column="enable_external_wiki" jdbcType="BIT" property="enableExternalWiki" />
    <result column="external_wiki_url" jdbcType="VARCHAR" property="externalWikiUrl" />
    <result column="enable_issues" jdbcType="BIT" property="enableIssues" />
    <result column="allow_public_issues" jdbcType="BIT" property="allowPublicIssues" />
    <result column="enable_external_tracker" jdbcType="BIT" property="enableExternalTracker" />
    <result column="external_tracker_url" jdbcType="VARCHAR" property="externalTrackerUrl" />
    <result column="external_tracker_format" jdbcType="VARCHAR" property="externalTrackerFormat" />
    <result column="external_tracker_style" jdbcType="VARCHAR" property="externalTrackerStyle" />
    <result column="enable_pulls" jdbcType="BIT" property="enablePulls" />
    <result column="pulls_ignore_whitespace" jdbcType="BIT" property="pullsIgnoreWhitespace" />
    <result column="pulls_allow_rebase" jdbcType="BIT" property="pullsAllowRebase" />
    <result column="is_fork" jdbcType="BIT" property="isFork" />
    <result column="fork_id" jdbcType="BIGINT" property="forkId" />
    <result column="created_unix" jdbcType="BIGINT" property="createdUnix" />
    <result column="updated_unix" jdbcType="BIGINT" property="updatedUnix" />
    <result column="has_child" jdbcType="BIT" property="hasChild" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, owner_id, lower_name, name, description, website, default_branch, size, use_custom_avatar, 
    num_watches, num_stars, num_forks, num_issues, num_closed_issues, num_pulls, num_closed_pulls, 
    num_milestones, num_closed_milestones, is_private, is_bare, is_mirror, enable_wiki, 
    allow_public_wiki, enable_external_wiki, external_wiki_url, enable_issues, allow_public_issues, 
    enable_external_tracker, external_tracker_url, external_tracker_format, external_tracker_style, 
    enable_pulls, pulls_ignore_whitespace, pulls_allow_rebase, is_fork, fork_id, created_unix, 
    updated_unix, has_child
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from repository
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mengka.springboot.dao.domain.GogsRepositoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into repository (id, owner_id, lower_name, 
      name, description, website, 
      default_branch, size, use_custom_avatar, 
      num_watches, num_stars, num_forks, 
      num_issues, num_closed_issues, num_pulls, 
      num_closed_pulls, num_milestones, num_closed_milestones, 
      is_private, is_bare, is_mirror, enable_wiki, 
      allow_public_wiki, enable_external_wiki, external_wiki_url, 
      enable_issues, allow_public_issues, enable_external_tracker, 
      external_tracker_url, external_tracker_format, 
      external_tracker_style, enable_pulls, pulls_ignore_whitespace, 
      pulls_allow_rebase, is_fork, fork_id, 
      created_unix, updated_unix)
    values (#{id,jdbcType=BIGINT}, #{ownerId,jdbcType=BIGINT}, #{lowerName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{website,jdbcType=VARCHAR}, 
      #{defaultBranch,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, #{useCustomAvatar,jdbcType=BIT}, 
      #{numWatches,jdbcType=INTEGER}, #{numStars,jdbcType=INTEGER}, #{numForks,jdbcType=INTEGER}, 
      #{numIssues,jdbcType=INTEGER}, #{numClosedIssues,jdbcType=INTEGER}, #{numPulls,jdbcType=INTEGER}, 
      #{numClosedPulls,jdbcType=INTEGER}, #{numMilestones,jdbcType=INTEGER}, #{numClosedMilestones,jdbcType=INTEGER}, 
      #{isPrivate,jdbcType=BIT}, #{isBare,jdbcType=BIT}, #{isMirror,jdbcType=BIT}, #{enableWiki,jdbcType=BIT}, 
      #{allowPublicWiki,jdbcType=BIT}, #{enableExternalWiki,jdbcType=BIT}, #{externalWikiUrl,jdbcType=VARCHAR}, 
      #{enableIssues,jdbcType=BIT}, #{allowPublicIssues,jdbcType=BIT}, #{enableExternalTracker,jdbcType=BIT}, 
      #{externalTrackerUrl,jdbcType=VARCHAR}, #{externalTrackerFormat,jdbcType=VARCHAR}, 
      #{externalTrackerStyle,jdbcType=VARCHAR}, #{enablePulls,jdbcType=BIT}, #{pullsIgnoreWhitespace,jdbcType=BIT}, 
      #{pullsAllowRebase,jdbcType=BIT}, #{isFork,jdbcType=BIT}, #{forkId,jdbcType=BIGINT}, 
      #{createdUnix,jdbcType=BIGINT}, #{updatedUnix,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mengka.springboot.dao.domain.GogsRepositoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="lowerName != null">
        lower_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="website != null">
        website,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="useCustomAvatar != null">
        use_custom_avatar,
      </if>
      <if test="numWatches != null">
        num_watches,
      </if>
      <if test="numStars != null">
        num_stars,
      </if>
      <if test="numForks != null">
        num_forks,
      </if>
      <if test="numIssues != null">
        num_issues,
      </if>
      <if test="numClosedIssues != null">
        num_closed_issues,
      </if>
      <if test="numPulls != null">
        num_pulls,
      </if>
      <if test="numClosedPulls != null">
        num_closed_pulls,
      </if>
      <if test="numMilestones != null">
        num_milestones,
      </if>
      <if test="numClosedMilestones != null">
        num_closed_milestones,
      </if>
      <if test="isPrivate != null">
        is_private,
      </if>
      <if test="isBare != null">
        is_bare,
      </if>
      <if test="isMirror != null">
        is_mirror,
      </if>
      <if test="enableWiki != null">
        enable_wiki,
      </if>
      <if test="allowPublicWiki != null">
        allow_public_wiki,
      </if>
      <if test="enableExternalWiki != null">
        enable_external_wiki,
      </if>
      <if test="externalWikiUrl != null">
        external_wiki_url,
      </if>
      <if test="enableIssues != null">
        enable_issues,
      </if>
      <if test="allowPublicIssues != null">
        allow_public_issues,
      </if>
      <if test="enableExternalTracker != null">
        enable_external_tracker,
      </if>
      <if test="externalTrackerUrl != null">
        external_tracker_url,
      </if>
      <if test="externalTrackerFormat != null">
        external_tracker_format,
      </if>
      <if test="externalTrackerStyle != null">
        external_tracker_style,
      </if>
      <if test="enablePulls != null">
        enable_pulls,
      </if>
      <if test="pullsIgnoreWhitespace != null">
        pulls_ignore_whitespace,
      </if>
      <if test="pullsAllowRebase != null">
        pulls_allow_rebase,
      </if>
      <if test="isFork != null">
        is_fork,
      </if>
      <if test="forkId != null">
        fork_id,
      </if>
      <if test="createdUnix != null">
        created_unix,
      </if>
      <if test="updatedUnix != null">
        updated_unix,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="lowerName != null">
        #{lowerName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="useCustomAvatar != null">
        #{useCustomAvatar,jdbcType=BIT},
      </if>
      <if test="numWatches != null">
        #{numWatches,jdbcType=INTEGER},
      </if>
      <if test="numStars != null">
        #{numStars,jdbcType=INTEGER},
      </if>
      <if test="numForks != null">
        #{numForks,jdbcType=INTEGER},
      </if>
      <if test="numIssues != null">
        #{numIssues,jdbcType=INTEGER},
      </if>
      <if test="numClosedIssues != null">
        #{numClosedIssues,jdbcType=INTEGER},
      </if>
      <if test="numPulls != null">
        #{numPulls,jdbcType=INTEGER},
      </if>
      <if test="numClosedPulls != null">
        #{numClosedPulls,jdbcType=INTEGER},
      </if>
      <if test="numMilestones != null">
        #{numMilestones,jdbcType=INTEGER},
      </if>
      <if test="numClosedMilestones != null">
        #{numClosedMilestones,jdbcType=INTEGER},
      </if>
      <if test="isPrivate != null">
        #{isPrivate,jdbcType=BIT},
      </if>
      <if test="isBare != null">
        #{isBare,jdbcType=BIT},
      </if>
      <if test="isMirror != null">
        #{isMirror,jdbcType=BIT},
      </if>
      <if test="enableWiki != null">
        #{enableWiki,jdbcType=BIT},
      </if>
      <if test="allowPublicWiki != null">
        #{allowPublicWiki,jdbcType=BIT},
      </if>
      <if test="enableExternalWiki != null">
        #{enableExternalWiki,jdbcType=BIT},
      </if>
      <if test="externalWikiUrl != null">
        #{externalWikiUrl,jdbcType=VARCHAR},
      </if>
      <if test="enableIssues != null">
        #{enableIssues,jdbcType=BIT},
      </if>
      <if test="allowPublicIssues != null">
        #{allowPublicIssues,jdbcType=BIT},
      </if>
      <if test="enableExternalTracker != null">
        #{enableExternalTracker,jdbcType=BIT},
      </if>
      <if test="externalTrackerUrl != null">
        #{externalTrackerUrl,jdbcType=VARCHAR},
      </if>
      <if test="externalTrackerFormat != null">
        #{externalTrackerFormat,jdbcType=VARCHAR},
      </if>
      <if test="externalTrackerStyle != null">
        #{externalTrackerStyle,jdbcType=VARCHAR},
      </if>
      <if test="enablePulls != null">
        #{enablePulls,jdbcType=BIT},
      </if>
      <if test="pullsIgnoreWhitespace != null">
        #{pullsIgnoreWhitespace,jdbcType=BIT},
      </if>
      <if test="pullsAllowRebase != null">
        #{pullsAllowRebase,jdbcType=BIT},
      </if>
      <if test="isFork != null">
        #{isFork,jdbcType=BIT},
      </if>
      <if test="forkId != null">
        #{forkId,jdbcType=BIGINT},
      </if>
      <if test="createdUnix != null">
        #{createdUnix,jdbcType=BIGINT},
      </if>
      <if test="updatedUnix != null">
        #{updatedUnix,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mengka.springboot.dao.domain.GogsRepositoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update repository
    <set>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="lowerName != null">
        lower_name = #{lowerName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=BIGINT},
      </if>
      <if test="useCustomAvatar != null">
        use_custom_avatar = #{useCustomAvatar,jdbcType=BIT},
      </if>
      <if test="numWatches != null">
        num_watches = #{numWatches,jdbcType=INTEGER},
      </if>
      <if test="numStars != null">
        num_stars = #{numStars,jdbcType=INTEGER},
      </if>
      <if test="numForks != null">
        num_forks = #{numForks,jdbcType=INTEGER},
      </if>
      <if test="numIssues != null">
        num_issues = #{numIssues,jdbcType=INTEGER},
      </if>
      <if test="numClosedIssues != null">
        num_closed_issues = #{numClosedIssues,jdbcType=INTEGER},
      </if>
      <if test="numPulls != null">
        num_pulls = #{numPulls,jdbcType=INTEGER},
      </if>
      <if test="numClosedPulls != null">
        num_closed_pulls = #{numClosedPulls,jdbcType=INTEGER},
      </if>
      <if test="numMilestones != null">
        num_milestones = #{numMilestones,jdbcType=INTEGER},
      </if>
      <if test="numClosedMilestones != null">
        num_closed_milestones = #{numClosedMilestones,jdbcType=INTEGER},
      </if>
      <if test="isPrivate != null">
        is_private = #{isPrivate,jdbcType=BIT},
      </if>
      <if test="isBare != null">
        is_bare = #{isBare,jdbcType=BIT},
      </if>
      <if test="isMirror != null">
        is_mirror = #{isMirror,jdbcType=BIT},
      </if>
      <if test="enableWiki != null">
        enable_wiki = #{enableWiki,jdbcType=BIT},
      </if>
      <if test="allowPublicWiki != null">
        allow_public_wiki = #{allowPublicWiki,jdbcType=BIT},
      </if>
      <if test="enableExternalWiki != null">
        enable_external_wiki = #{enableExternalWiki,jdbcType=BIT},
      </if>
      <if test="externalWikiUrl != null">
        external_wiki_url = #{externalWikiUrl,jdbcType=VARCHAR},
      </if>
      <if test="enableIssues != null">
        enable_issues = #{enableIssues,jdbcType=BIT},
      </if>
      <if test="allowPublicIssues != null">
        allow_public_issues = #{allowPublicIssues,jdbcType=BIT},
      </if>
      <if test="enableExternalTracker != null">
        enable_external_tracker = #{enableExternalTracker,jdbcType=BIT},
      </if>
      <if test="externalTrackerUrl != null">
        external_tracker_url = #{externalTrackerUrl,jdbcType=VARCHAR},
      </if>
      <if test="externalTrackerFormat != null">
        external_tracker_format = #{externalTrackerFormat,jdbcType=VARCHAR},
      </if>
      <if test="externalTrackerStyle != null">
        external_tracker_style = #{externalTrackerStyle,jdbcType=VARCHAR},
      </if>
      <if test="enablePulls != null">
        enable_pulls = #{enablePulls,jdbcType=BIT},
      </if>
      <if test="pullsIgnoreWhitespace != null">
        pulls_ignore_whitespace = #{pullsIgnoreWhitespace,jdbcType=BIT},
      </if>
      <if test="pullsAllowRebase != null">
        pulls_allow_rebase = #{pullsAllowRebase,jdbcType=BIT},
      </if>
      <if test="isFork != null">
        is_fork = #{isFork,jdbcType=BIT},
      </if>
      <if test="forkId != null">
        fork_id = #{forkId,jdbcType=BIGINT},
      </if>
      <if test="createdUnix != null">
        created_unix = #{createdUnix,jdbcType=BIGINT},
      </if>
      <if test="updatedUnix != null">
        updated_unix = #{updatedUnix,jdbcType=BIGINT},
      </if>
      <if test="hasChild != null">
        has_child = #{hasChild,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mengka.springboot.dao.domain.GogsRepositoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update repository
    set owner_id = #{ownerId,jdbcType=BIGINT},
      lower_name = #{lowerName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      default_branch = #{defaultBranch,jdbcType=VARCHAR},
      size = #{size,jdbcType=BIGINT},
      use_custom_avatar = #{useCustomAvatar,jdbcType=BIT},
      num_watches = #{numWatches,jdbcType=INTEGER},
      num_stars = #{numStars,jdbcType=INTEGER},
      num_forks = #{numForks,jdbcType=INTEGER},
      num_issues = #{numIssues,jdbcType=INTEGER},
      num_closed_issues = #{numClosedIssues,jdbcType=INTEGER},
      num_pulls = #{numPulls,jdbcType=INTEGER},
      num_closed_pulls = #{numClosedPulls,jdbcType=INTEGER},
      num_milestones = #{numMilestones,jdbcType=INTEGER},
      num_closed_milestones = #{numClosedMilestones,jdbcType=INTEGER},
      is_private = #{isPrivate,jdbcType=BIT},
      is_bare = #{isBare,jdbcType=BIT},
      is_mirror = #{isMirror,jdbcType=BIT},
      enable_wiki = #{enableWiki,jdbcType=BIT},
      allow_public_wiki = #{allowPublicWiki,jdbcType=BIT},
      enable_external_wiki = #{enableExternalWiki,jdbcType=BIT},
      external_wiki_url = #{externalWikiUrl,jdbcType=VARCHAR},
      enable_issues = #{enableIssues,jdbcType=BIT},
      allow_public_issues = #{allowPublicIssues,jdbcType=BIT},
      enable_external_tracker = #{enableExternalTracker,jdbcType=BIT},
      external_tracker_url = #{externalTrackerUrl,jdbcType=VARCHAR},
      external_tracker_format = #{externalTrackerFormat,jdbcType=VARCHAR},
      external_tracker_style = #{externalTrackerStyle,jdbcType=VARCHAR},
      enable_pulls = #{enablePulls,jdbcType=BIT},
      pulls_ignore_whitespace = #{pullsIgnoreWhitespace,jdbcType=BIT},
      pulls_allow_rebase = #{pullsAllowRebase,jdbcType=BIT},
      is_fork = #{isFork,jdbcType=BIT},
      fork_id = #{forkId,jdbcType=BIGINT},
      created_unix = #{createdUnix,jdbcType=BIGINT},
      updated_unix = #{updatedUnix,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByBranch" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from repository
    where default_branch = #{branch}
    order by updated_unix desc
  </select>
</mapper>